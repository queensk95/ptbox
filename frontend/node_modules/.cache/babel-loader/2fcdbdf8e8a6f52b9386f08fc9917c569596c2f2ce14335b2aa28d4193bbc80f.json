{"ast":null,"code":"import React,{useState}from'react';import{initiateScan}from'../api/api';// Import the reusable API function\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function ScanForm(_ref){let{onScanComplete}=_ref;const[domain,setDomain]=useState('');const[tool,setTool]=useState('theHarvester');const[loading,setLoading]=useState(false);const[error,setError]=useState('');const handleScan=async()=>{setLoading(true);setError('');try{const results=await initiateScan(domain,tool);// Use the function from api.js\nonScanComplete(results);}catch(err){console.error(err);setError('Failed to initiate scan. Please try again.');}finally{setLoading(false);}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Enter domain\",value:domain,onChange:e=>setDomain(e.target.value)}),/*#__PURE__*/_jsxs(\"select\",{value:tool,onChange:e=>setTool(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"theHarvester\",children:\"theHarvester\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Amass\",children:\"Amass\"})]}),/*#__PURE__*/_jsx(\"button\",{onClick:handleScan,disabled:loading,children:loading?'Scanning...':'Scan'}),error&&/*#__PURE__*/_jsx(\"p\",{style:{color:'red'},children:error})]});}export default ScanForm;","map":{"version":3,"names":["React","useState","initiateScan","jsx","_jsx","jsxs","_jsxs","ScanForm","_ref","onScanComplete","domain","setDomain","tool","setTool","loading","setLoading","error","setError","handleScan","results","err","console","children","type","placeholder","value","onChange","e","target","onClick","disabled","style","color"],"sources":["C:/Users/theka/PycharmProjects/final/frontend/src/components/ScanForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { initiateScan } from '../api/api'; // Import the reusable API function\r\n\r\nfunction ScanForm({ onScanComplete }) {\r\n    const [domain, setDomain] = useState('');\r\n    const [tool, setTool] = useState('theHarvester');\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState('');\r\n\r\n    const handleScan = async () => {\r\n        setLoading(true);\r\n        setError('');\r\n        try {\r\n            const results = await initiateScan(domain, tool); // Use the function from api.js\r\n            onScanComplete(results);\r\n        } catch (err) {\r\n            console.error(err);\r\n            setError('Failed to initiate scan. Please try again.');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Enter domain\"\r\n                value={domain}\r\n                onChange={(e) => setDomain(e.target.value)}\r\n            />\r\n            <select value={tool} onChange={(e) => setTool(e.target.value)}>\r\n                <option value=\"theHarvester\">theHarvester</option>\r\n                <option value=\"Amass\">Amass</option>\r\n            </select>\r\n            <button onClick={handleScan} disabled={loading}>\r\n                {loading ? 'Scanning...' : 'Scan'}\r\n            </button>\r\n            {error && <p style={{ color: 'red' }}>{error}</p>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ScanForm;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,YAAY,KAAQ,YAAY,CAAE;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE3C,QAAS,CAAAC,QAAQA,CAAAC,IAAA,CAAqB,IAApB,CAAEC,cAAe,CAAC,CAAAD,IAAA,CAChC,KAAM,CAACE,MAAM,CAAEC,SAAS,CAAC,CAAGV,QAAQ,CAAC,EAAE,CAAC,CACxC,KAAM,CAACW,IAAI,CAAEC,OAAO,CAAC,CAAGZ,QAAQ,CAAC,cAAc,CAAC,CAChD,KAAM,CAACa,OAAO,CAAEC,UAAU,CAAC,CAAGd,QAAQ,CAAC,KAAK,CAAC,CAC7C,KAAM,CAACe,KAAK,CAAEC,QAAQ,CAAC,CAAGhB,QAAQ,CAAC,EAAE,CAAC,CAEtC,KAAM,CAAAiB,UAAU,CAAG,KAAAA,CAAA,GAAY,CAC3BH,UAAU,CAAC,IAAI,CAAC,CAChBE,QAAQ,CAAC,EAAE,CAAC,CACZ,GAAI,CACA,KAAM,CAAAE,OAAO,CAAG,KAAM,CAAAjB,YAAY,CAACQ,MAAM,CAAEE,IAAI,CAAC,CAAE;AAClDH,cAAc,CAACU,OAAO,CAAC,CAC3B,CAAE,MAAOC,GAAG,CAAE,CACVC,OAAO,CAACL,KAAK,CAACI,GAAG,CAAC,CAClBH,QAAQ,CAAC,4CAA4C,CAAC,CAC1D,CAAC,OAAS,CACNF,UAAU,CAAC,KAAK,CAAC,CACrB,CACJ,CAAC,CAED,mBACIT,KAAA,QAAAgB,QAAA,eACIlB,IAAA,UACImB,IAAI,CAAC,MAAM,CACXC,WAAW,CAAC,cAAc,CAC1BC,KAAK,CAAEf,MAAO,CACdgB,QAAQ,CAAGC,CAAC,EAAKhB,SAAS,CAACgB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAC9C,CAAC,cACFnB,KAAA,WAAQmB,KAAK,CAAEb,IAAK,CAACc,QAAQ,CAAGC,CAAC,EAAKd,OAAO,CAACc,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAAAH,QAAA,eAC1DlB,IAAA,WAAQqB,KAAK,CAAC,cAAc,CAAAH,QAAA,CAAC,cAAY,CAAQ,CAAC,cAClDlB,IAAA,WAAQqB,KAAK,CAAC,OAAO,CAAAH,QAAA,CAAC,OAAK,CAAQ,CAAC,EAChC,CAAC,cACTlB,IAAA,WAAQyB,OAAO,CAAEX,UAAW,CAACY,QAAQ,CAAEhB,OAAQ,CAAAQ,QAAA,CAC1CR,OAAO,CAAG,aAAa,CAAG,MAAM,CAC7B,CAAC,CACRE,KAAK,eAAIZ,IAAA,MAAG2B,KAAK,CAAE,CAAEC,KAAK,CAAE,KAAM,CAAE,CAAAV,QAAA,CAAEN,KAAK,CAAI,CAAC,EAChD,CAAC,CAEd,CAEA,cAAe,CAAAT,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}